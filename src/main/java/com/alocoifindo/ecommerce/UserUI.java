/*
 * Copyright Alocoifindo 2021®
 * GitHub with ♥︎ for educational purposes
 * https://alocosite.w3spaces.com
 */
package com.alocoifindo.ecommerce;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 *
 * @author facundoferreyra
 */
public class UserUI extends javax.swing.JFrame {


    int id_user_new;
    int discount;
    int id_userCreator;
    static UserUI userUI = new UserUI();
    
    /**
     * Creates new form UserUI
     */
    public UserUI() {
        initComponents();
        setLocationRelativeTo(null);
        getRootPane().setDefaultButton(updateButton);
        
        discountLabel.setVisible(LoginUI.privileges);
        discountField.setVisible(LoginUI.privileges);
        // createUserButton#Visibile(true) if Admin
        createUserButton.setVisible(LoginUI.privileges);
        // updateButton#Visible(false) if cames from Login SignUp
        updateButton.setVisible(!(LoginUI.fromLogin));
        // createUserButton#Visibile(true) if cames from Login SignUp
        if (LoginUI.fromLogin == true && LoginUI.privileges == false) {
            createUserButton.setVisible(true);
        }
        
        if (LoginUI.privileges == false) {
            callCustomerData();
        } 
    }

    public static void callCustomerData() {
        usernameField.setText(ApplicationMain.customer.getUsername());
        passwordField.setText(ApplicationMain.customer.getPassword());
        firstnameField.setText(ApplicationMain.customer.getFirstname());
        lastnameField.setText(ApplicationMain.customer.getLastname());
        telephoneField.setText(String.valueOf(ApplicationMain.customer.getTelephone()));
        emailField.setText(ApplicationMain.customer.getEmail());
        addressField.setText(ApplicationMain.customer.getAddressLine());
        postalcodeField.setText(String.valueOf(ApplicationMain.customer.getPostalcode()));
        discountField.setText(String.valueOf(ApplicationMain.customer.getDiscount()));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        firstnameField = new javax.swing.JTextField();
        lastnameField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        telephoneField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        discountLabel = new javax.swing.JLabel();
        discountField = new javax.swing.JTextField();
        addressField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cityField = new javax.swing.JTextField();
        postalcodeField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        createUserButton = new javax.swing.JButton();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Customer Data");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/customer_70.png"))); // NOI18N

        jLabel2.setText("First Name:");

        jLabel3.setText("Last Name:");

        jLabel4.setText("Username:");

        jLabel5.setText("Password:");

        passwordField.setToolTipText("");

        jLabel6.setText("Email:");

        jLabel7.setText("Telephone:");

        discountLabel.setText("Discount:");

        jLabel9.setText("Address:");

        jLabel10.setText("City:");

        jLabel11.setText("Postal Code:");

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        createUserButton.setText("Create User");
        createUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(createUserButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updateButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(discountLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(discountField, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(telephoneField, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lastnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(firstnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cityField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(postalcodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(jLabel9)
                                    .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(discountLabel)
                            .addComponent(discountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(firstnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lastnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(telephoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(1, 1, 1)
                                .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(postalcodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateButton)
                    .addComponent(createUserButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        try {
            Connection con = ApplicationMain.startConnection();
            
            // find last ID_user
            PreparedStatement lastId_stmt = con.prepareStatement("SELECT max(id_user) FROM Users");
            ResultSet rsMaxId = lastId_stmt.executeQuery();
            // ResultSet pointer
            rsMaxId.next();
            // retrieve Result of Set at pointer   // and adds 1 to id_user_new
            id_user_new = rsMaxId.getInt(1) + 1;
                        
            //prepare for transaction
            con.setAutoCommit(false);
            // INSERT INTO Users 
            String insertUserSQL = "INSERT INTO Users VALUES (?, ?, ?, 0)";
            PreparedStatement insUser = con.prepareStatement(insertUserSQL);
            insUser.setInt(1, id_user_new);
            insUser.setString(2, usernameField.getText());
            insUser.setString(3, String.copyValueOf(passwordField.getPassword()));
            
            // INSERT INTO Customers
            String insertCustomerSQL = "INSERT INTO Customers VALUES (?, ?, ?, ?, ?, ?, ?, ?, 0, CURRENT_TIMESTAMP(), ?)";
            PreparedStatement insCustomer = con.prepareStatement(insertCustomerSQL);
            insCustomer.setInt(1, id_user_new);
            insCustomer.setString(2, firstnameField.getText());
            insCustomer.setString(3, lastnameField.getText());
            insCustomer.setString(4, addressField.getText());
            insCustomer.setInt(5, Integer.parseInt(postalcodeField.getText()));
            insCustomer.setString(6, cityField.getText());
            insCustomer.setString(7, emailField.getText());
            insCustomer.setInt(8, Integer.parseInt(telephoneField.getText()));
            // NEXT CHANGE: "id_user_new" for "id_userCreator"
            insCustomer.setInt(9, id_user_new);

            try {
                insUser.executeUpdate();
                insCustomer.executeUpdate();
                con.commit();
                
                System.out.println("Data inserted");
                setVisible(false);
                ApplicationUI.appUI.setVisible(true);
                
            } catch (SQLException e) {
                con.rollback();
                
                e.printStackTrace();
                System.out.println("Data not inserted");
            }
 
            ApplicationMain.stopConnection(con);
            
        } catch (SQLException ex) {
           ex.printStackTrace();
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void createUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserButtonActionPerformed
        try {
            Connection con = ApplicationMain.startConnection();
            
            // if comes fromLoginUI = Find last ID for INSERT NEW USER
            if (LoginUI.fromLogin) {
                PreparedStatement lastId_stmt = con.prepareStatement("SELECT max(id_user) FROM Users");
                ResultSet rsMaxId = lastId_stmt.executeQuery();
                rsMaxId.next();
                id_user_new = rsMaxId.getInt(1) + 1;
                
            // Find ID from CURRENT USER
            } else {
                PreparedStatement idCheck = con.prepareStatement("SELECT id_user FROM Users WHERE username=?");
         // !!! id_user_new must be from SELECTED CUSTOMER !!!
                idCheck.setString(1, LoginUI.username);
                ResultSet rsId = idCheck.executeQuery();
                id_user_new = rsId.getInt(1);
            }
            
            // UPDATE 
            PreparedStatement upd = con.prepareStatement("INSERT INTO Users SET id_user=?, username=?, password=?, ; "
                                                        // 4 values in UPDATE
                                                       + "INSERT INTO Customers (`id_user`, `firstname`, `lastname`, `address_line`, `postalcode`, `city`, `email`, `telephone`, `discount`, `creation_date`, `id_ByUser`)"
                                                       + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, 0, CURRENT_TIMESTAMP(), ?)");
            upd.setInt(1, id_user_new);
            upd.setString(2, usernameField.getText());
            upd.setString(3, String.copyValueOf(passwordField.getPassword()));
            upd.setInt(4, id_user_new);
            upd.setString(5, firstnameField.getText());
            upd.setString(6, lastnameField.getText());
            upd.setString(7, addressField.getText());
            upd.setInt(8, Integer.parseInt(postalcodeField.getText()));
            upd.setString(9, cityField.getText());
            upd.setString(10, emailField.getText());
            upd.setInt(11, Integer.parseInt(telephoneField.getText()));
            // NEXT CHANGE: "id_user_new" for "id_userCreator"
            upd.setInt(12, id_user_new);
            try {
                upd.executeUpdate();
                System.out.println("Data uploaded");
                setVisible(false);
                
            } catch (SQLException e) {
                e.printStackTrace();
                System.out.println("Data not uploaded");
            }
            ApplicationMain.stopConnection(con);
            
        } catch (SQLException ex) {
           ex.printStackTrace();
        }
        // loginUI#Visible(false) if exist
        LoginUI.loginUI.setVisible(false);
    }//GEN-LAST:event_createUserButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the System look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("System".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                userUI.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTextField addressField;
    private static javax.swing.JTextField cityField;
    private static javax.swing.JButton createUserButton;
    private static javax.swing.JTextField discountField;
    private static javax.swing.JLabel discountLabel;
    private static javax.swing.JTextField emailField;
    private static javax.swing.JTextField firstnameField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JToggleButton jToggleButton1;
    private static javax.swing.JTextField lastnameField;
    public static javax.swing.JPasswordField passwordField;
    private static javax.swing.JTextField postalcodeField;
    private static javax.swing.JTextField telephoneField;
    private static javax.swing.JButton updateButton;
    public static javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
